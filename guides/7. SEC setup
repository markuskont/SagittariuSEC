#NOTE! - debian and ubuntu provide repo install for SEC, but the version is old
#Since SEC is pretty simple to set up, the main benefit would be provided init scripts
#Real complexity with SEC is ruleset management and creation
#Therefore, the setup and init scripts can be done manually with little management overhead

1. Install SEC

wget -O sec.tar.gz http://downloads.sourceforge.net/project/simple-evcorr/sec/2.7.6/sec-2.7.6.tar.gz?r=http%3A%2F%2Fsimple-evcorr.sourceforge.net%2F&ts=1407496593&use_mirror=heanet

tar -xzf sec.tar.gz

cp sec /usr/sbin/

2. SEC init script

# This script is far from perfect, but shoud do the trick
# I modified it from the one that was provided with debian repo install
# My script makes use of --pid and --detach options provided by SEC

vim /etc/init.d/sec

"""
#! /bin/sh
### BEGIN INIT INFO
# Provides:          sec
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts and stops the Simple Event Correlator
# Description:       SEC is Simple Event Correlator
### END INIT INFO

# Author: Jaakko Niemi <liiwi@debian.org>
#
# Based on Etch skeleton. Thanks to The Anarcat for first script.
# Modified by Markus Kont

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Simple Event Correlator"
NAME=sec
DAEMON=/usr/sbin/$NAME
#DAEMON_ARGS="--options args"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
DAEMON_ARGS="--detach --pid=$PIDFILE --conf=/opt/SagittariuSEC/rules/*.sec --input=/var/log/server/*.log --syslog=daemon"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
		if [ -f $PIDFILE] ; then
			echo "process exists"
		else
			 $DAEMON $DAEMON_ARGS > /dev/null \
					|| return 2
		fi

}

do_stop()
{
        if [ -f $PIDFILE] ; then
        	echo "killing process"
        	cat $PIDFILE | xargs kill
        	RETVAL="$?"
        	rm -f $PIDFILE
        	return "$RETVAL"
        else
        	echo "no SEC daemon running"
        fi
}

case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  restart|force-reload)
        #
        # If the "reload" option is implemented then remove the
        # 'force-reload' alias
        #
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
        #echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 3
        ;;
esac
"""

chmod 755 /etc/init.d/sec

#Add SEC to startup

update-rc.d sec defaults