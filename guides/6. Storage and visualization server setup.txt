####Work in progress####


This guide assumes that operational syslog server on Ubuntu Server 14.04 LTS virtual machine with working network connection is installed and accessible via SSH. Basic understanding of vim command is assumed but configuration can be carried out with other editors as well. Functional custom CA setup is required with make_cert.sh script. Syslog server must be operational. Commands must be carried out as root user, execution via sudo is possible but untested. Relevant entries must be appended to presented configuration files or, if already present, altered according to temlates within this guide. Relevant services must be restarted for changes to take effect.

Storage + visualization serveri is configured separately from regular correlation server (Guide 2.). This is due to the fact that described components require java (personal preference, but I do not like mixing it with other solututions). Server can be used independantly as central log collector, or , in my case, all logs from syslog-ng correlation server will be forwarded here for storage and visualization.

Please change domain.ex with your own domain name. Same goes for server names.

1. Set up certificates

# Create certificates 
# Ref. Guide 3. (Server side points 1. and 2.)

2. Set up Rsyslog 8 log collector

# We use rsyslog 8 ppa, since earlier version does not provide elasticsearch plugin
# You can compile by hand but I consider this approach cruel and unusual punishment for any sysadmin

add-apt-repository ppa:adiscon/v8-stable
apt-get update && apt-get dist-upgrade && apt-get dist-upgrade
apt-get -y install rsyslog-elasticsearch rsyslog-gnutls

vim /etc/rsyslog.conf

"""
...
$ModLoad imtcp
...
"""

vim /etc/rsyslog.d/remote.conf

"""
# TLS driver load
$DefaultNetstreamDriver gtls

# certificate files
$DefaultNetstreamDriverCAFile /etc/ssl/syslog/cacert.pem
$DefaultNetstreamDriverCertFile /etc/ssl/syslog/cert.pem
$DefaultNetstreamDriverKeyFile /etc/ssl/syslog/key.pem

$ActionSendStreamDriverAuthMode x509/name
$InputTCPServerStreamDriverPermittedPeer *.domain.ex
$InputTCPServerStreamDriverMode 1 # run driver in TLS-only mode
$InputTCPServerRun 6514 # start up listener at port 6514
"""

# For simple change in domain name value, 
# Don't forget to escape the dot (matching is done using regular expressions; unescaped dot means "match anything")

export domain_name=<your_domain_name>

sed -i s/domain\.ex/$domain_name/g /etc/rsyslog.d/remote.conf

service rsyslog restart

2.1. Forward all logs from central syslog-ng server to rsyslog-elasticsearch server

# On central server

vim /etc/syslog-ng/syslog-ng.conf

"""
...
destination d_kibana_server {
        syslog(
                kibana.domain.ex
                transport("tls")
                port(6514)
                tls( peer-verify(required-trusted) ca_dir('/etc/ssl/syslog/') key_file('/etc/ssl/syslog/orion.domain.ex-key.pem') cert_file('/etc/ssl/syslog/orion.domain.ex-cert.pem'))
        );
};
...
log {
        source(s_remote_ietf);
        source(s_src);
        destination(d_local);
        destination(d_kibana_server);
};
...
"""

service syslog-ng restart

3. Set up elasticsearch server

apt-get install openjdk-7-jre-headless -y

# Download elasticsearch installer
cd /opt/
export elastic_version=elasticsearch-1.2.0.deb
wget https://download.elasticsearch.org/elasticsearch/elasticsearch/$elastic_version
dpkg -i $elastic_version

# add to startup
update-rc.d elasticsearch defaults 95 10

# start server
/etc/init.d/elasticsearch start

4. Configure rsyslog to forward logs to elasticsearch

vim /etc/rsyslog.d/elasticsearch.conf

#from http://www.rsyslog.com/guides-for-rsyslog/the-recipies/more-complex-scenarios/

"""
module(load="imuxsock")             # for listening to /dev/log
module(load="omelasticsearch") # for outputting to Elasticsearch
# this is for index names to be like: logstash-YYYY.MM.DD
template(name="logstash-index"
  type="list") {
    constant(value="logstash-")
    property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}

# this is for formatting our syslog in JSON with @timestamp
template(name="plain-syslog"
  type="list") {
    constant(value="{")
      constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
      constant(value="\",\"host\":\"")        property(name="hostname")
      constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
      constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
      constant(value="\",\"tag\":\"")   property(name="syslogtag" format="json")
      constant(value="\",\"message\":\"")    property(name="msg" format="json")
    constant(value="\"}")
}
# this is where we actually send the logs to Elasticsearch (localhost:9200 by default)
action(type="omelasticsearch"
    template="plain-syslog"
    searchIndex="logstash-index"
    dynSearchIndex="on")
"""

/etc/init.d/rsyslog restart

5. Set up kibana3


5.1. Set up apache vhost templates

# WIP
# Install apache web server

apt-get install apache2
a2dissite 000-default
service apache2 reload

# We use HTTPS by default
vim /etc/apache2/sites-available/vhost_ssl_template

"""
<Directory /srv/virtuals/__VHOST__>
                AllowOverride None
	Require all granted
</Directory>

<VirtualHost *:443>
  ServerName __VHOST__
  ServerAdmin webmaster@domain.ex
  DocumentRoot /srv/virtuals/__VHOST__/html/

  <Directory /srv/virtuals/__VHOST__/html/>
                Options +FollowSymLinks +Multiviews +Indexes
                AllowOverride None
                AuthType basic
                AuthName "private"
                AuthUserFile /var/secure/.htpasswd
                Require valid-user
  </Directory>

  SSLEngine on
  SSLCertificateFile /etc/apache2/__VHOST__/__VHOST__.crt
  #SSLCertificateKeyFile /etc/apache2/__VHOST__/__VHOST__.key
  SSLCertificateKeyFile /etc/apache2/id_rsa.key

  ErrorLog "/srv/virtuals/__VHOST__/log/ssl-error.log"
  CustomLog "/srv/virtuals/__VHOST__/log/ssl-access.log" vhost_combined
  ServerSignature Off

</VirtualHost>
"""

# Redirect HTTP traffic to HTTPS
vim /etc/apache2/sites-available/vhost_redirect_template

"""
<VirtualHost *:80>
  ServerName __VHOST__
  Redirect permanent / https://__VHOST__
</VirtualHost>
"""

# Normal HTTP template

vim /etc/apache2/sites-available/vhost_template

"""
Directory /srv/virtuals/__VHOST__>
                AllowOverride None
                Require all granted
</Directory>

<VirtualHost *:80>
  ServerName __VHOST__
  ServerAdmin webmaster@spin.ee
  DocumentRoot /srv/virtuals/__VHOST__/html

  <Directory /srv/virtuals/__VHOST__/html/>
                Options +FollowSymLinks +Multiviews +Indexes
                AllowOverride None
                AuthType basic
                AuthName "private"
                AuthUserFile /var/secure/.htpasswd
                Require valid-user
  </Directory>

  ErrorLog "/srv/virtuals/__VHOST__/log/error.log"
  CustomLog "/srv/virtuals/__VHOST__/log/access.log" vhost_combined
  ServerSignature Off

</VirtualHost>
"""

5.2. Basic authenticaiton

apt-get install apache2-utils

mkdir /var/secure

chown www-data /var/secure/ && chmod 700 /var/secure/

htpasswd -c /var/secure/.htpasswd admin

/etc/init.d/apache2 reload

5.3. Create apache vhost for kibana

# WIP, SSL version does not work because HTTPS kibana cannot reach elasticsearch

export VHOST=kibana.domain.ex
mkdir -p /srv/virtuals/$VHOST/{html,log}

ssh-keygen -t rsa -b 2048

#save in /etc/apache2/id_rsa.key

mkdir /etc/apache2/$VHOST && openssl req -new -key /etc/apache2/id_rsa.key -out /etc/apache2/$VHOST/$VHOST.csr

#CN=$VHOST

openssl x509 -req -days 1825 -in /etc/apache2/$VHOST/$VHOST.csr -signkey /etc/apache2/id_rsa.key -out /etc/apache2/$VHOST/$VHOST.crt

cp /etc/apache2/sites-available/vhost_ssl_template /etc/apache2/sites-available/$VHOST-ssl.conf

# This is how I want to do it, but havent figured out how to do SSL
# cp /etc/apache2/sites-available/vhost_redirect_template /etc/apache2/sites-available/$VHOST.conf

# So for now lets do it in unsecure way
cp /etc/apache2/sites-available/vhost_template /etc/apache2/sites-available/$VHOST.conf

sed -i s/__VHOST__/$VHOST/g /etc/apache2/sites-available/$VHOST-ssl.conf
sed -i s/__VHOST__/$VHOST/g /etc/apache2/sites-available/$VHOST.conf

a2enmod ssl
a2ensite $VHOST-ssl
a2ensite $VHOST
/etc/init.d/apache2 reload

5.4. kibana

apt-get install unzip
cd /opt

wget http://download.elasticsearch.org/kibana/kibana/kibana-latest.zip

mv kibana-latest/* /srv/virtuals/$VHOST/html/ && cd /srv/virtuals/$VHOST/html/

# configure elasticsearch backend by FQDN of elasticsearch host (we configured it on same machine)

vim src/config.js

"""
...
elasticsearch: "http://kibana.domain.ex:9200",
...
"""